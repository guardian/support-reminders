// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The SupportReminders stack matches the snapshot 1`] = `
{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "IsProd": {
      "Fn::Equals": [
        {
          "Ref": "Stage",
        },
        "PROD",
      ],
    },
  },
  "Description": "The lambdas for supporter reminders",
  "Mappings": {
    "StageMap": {
      "CODE": {
        "CorsOrigin": "'*'",
        "DomainName": "reminders-code.support.guardianapis.com",
      },
      "PROD": {
        "CorsOrigin": "'*'",
        "DomainName": "reminders.support.guardianapis.com",
      },
    },
  },
  "Metadata": {
    "gu:cdk:constructs": [
      "GuStringParameter",
      "GuVpcParameter",
      "GuSubnetListParameter",
      "GuDistributionBucketParameter",
      "GuLambdaFunction",
      "GuLambdaFunction",
      "GuLambdaFunction",
      "GuApiGatewayWithLambdaByPath",
      "GuApiGateway5xxPercentageAlarm",
      "GuScheduledLambda",
      "GuLambdaErrorPercentageAlarm",
      "GuScheduledLambda",
      "GuLambdaErrorPercentageAlarm",
      "GuAlarm",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": {
    "RestApiEndpoint0551178A": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "RestApi0C43BF4B",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "RestApiDeploymentStageprod3855DE66",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "CertificateArn": {
      "Description": "ARN of the certificate",
      "Type": "String",
    },
    "DatalakeBucket": {
      "Description": "Bucket to upload data for ingestion into BigQuery",
      "Type": "String",
    },
    "DeployBucket": {
      "Default": "membership-dist",
      "Description": "Bucket to copy files to",
      "Type": "String",
    },
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "PrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "SecurityGroupToAccessPostgres": {
      "Description": "Security group to access the RDS instance",
      "Type": "String",
    },
    "SecurityGroupToAccessPostgresCDK": {
      "Description": "Security group to access the RDS instance",
      "Type": "String",
    },
    "Stack": {
      "Default": "support",
      "Description": "Stack name",
      "Type": "String",
    },
    "Stage": {
      "AllowedValues": [
        "CODE",
        "PROD",
      ],
      "Description": "Set by RiffRaff on each deploy",
      "Type": "String",
    },
    "VpcId": {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
    "VpcSubnets": {
      "Description": "Subnets for RDS access",
      "Type": "List<AWS::EC2::Subnet::Id>",
    },
  },
  "Resources": {
    "ApiGateway4XXAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmDescription": "Reminders API received an invalid request",
        "AlarmName": {
          "Fn::Sub": "support-reminders-\${Stage} API gateway 4XX response",
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "ApiName",
            "Value": {
              "Fn::Sub": "support-reminders-\${Stage}",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "4XXError",
        "Namespace": "AWS/ApiGateway",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 8,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ApiGateway4XXAlarm59D14AA2": {
      "Properties": {
        "ActionsEnabled": false,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":contributions-dev",
              ],
            ],
          },
        ],
        "AlarmDescription": "Impact - Reminders API received an invalid request. Follow the process in https://docs.google.com/document/d/1_3El3cly9d7u_jPgTcRjLxmdG2e919zCLvmcFCLOYAk/edit",
        "AlarmName": "URGENT 9-5 - CODE API gateway 4XX response",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "ApiName",
            "Value": "support-reminders-CODE",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "4XXError",
        "Namespace": "AWS/ApiGateway",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 8,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ApiGateway5XXAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmDescription": "Reminders API failed to create a signup",
        "AlarmName": {
          "Fn::Sub": "support-reminders-\${Stage} API gateway 5XX response",
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "ApiName",
            "Value": {
              "Fn::Sub": "support-reminders-\${Stage}",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "5XXError",
        "Namespace": "AWS/ApiGateway",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ApiGatewayHigh5xxPercentageAlarmSupportreminders2F3286A8": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":conversion-dev",
              ],
            ],
          },
        ],
        "AlarmDescription": "support-reminders exceeded 1% error rate",
        "AlarmName": "High 5XX error % from support-reminders (ApiGateway) in CODE",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "100*m1/m2",
            "Id": "expr_1",
            "Label": "% of 5XX responses served for support-reminders",
          },
          {
            "Id": "m1",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "ApiName",
                    "Value": "support-CODE-support-reminders",
                  },
                ],
                "MetricName": "5XXError",
                "Namespace": "AWS/ApiGateway",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          {
            "Id": "m2",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "ApiName",
                    "Value": "support-CODE-support-reminders",
                  },
                ],
                "MetricName": "Count",
                "Namespace": "AWS/ApiGateway",
              },
              "Period": 60,
              "Stat": "SampleCount",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "BasePathMapping": {
      "Properties": {
        "DomainName": {
          "Ref": "DomainName",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
        "Stage": {
          "Ref": "RestApiDeploymentStageprod3855DE66",
        },
      },
      "Type": "AWS::ApiGateway::BasePathMapping",
    },
    "CancelRemindersLambda": {
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeployBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${Stack}/\${Stage}/support-reminders/support-reminders.zip",
          },
        },
        "Description": "A lambda for cancelling pending support reminders",
        "Environment": {
          "Variables": {
            "Stage": {
              "Ref": "Stage",
            },
          },
        },
        "FunctionName": {
          "Fn::Sub": "support-reminders-cancel-reminders-old-\${Stage}",
        },
        "Handler": "cancel-reminders/lambda/lambda.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CancelRemindersLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgres",
            },
          ],
          "SubnetIds": {
            "Ref": "VpcSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "CancelRemindersLambdaAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmDescription": "Failed to cancel pending reminders",
        "AlarmName": {
          "Fn::Sub": "support-reminders-cancel-reminders-\${Stage} lambda error",
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "CancelRemindersLambda",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "CancelRemindersLambdaCreateOneOffPermissionProd": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "CancelRemindersLambda",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:\${AWS::Region}:\${AWS::AccountId}:\${__ApiId__}/\${__Stage__}/POST/cancel",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi",
              },
              "__Stage__": "*",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CancelRemindersLambdaRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "ssm:GetParametersByPath",
                  "ssm:GetParameter",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/db-config/\${Stage}",
                  },
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/idapi/\${Stage}/*",
                  },
                ],
              },
            },
            "PolicyName": "CancelRemindersLambdaRolePolicy1",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": "s3:GetObject",
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:s3::*:membership-dist/*",
                ],
              },
            },
            "PolicyName": "CancelRemindersLambdaRolePolicy2",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CreateReminderSignupLambda": {
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeployBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${Stack}/\${Stage}/support-reminders/support-reminders.zip",
          },
        },
        "Description": "A lambda for creating support reminders",
        "Environment": {
          "Variables": {
            "Stage": {
              "Ref": "Stage",
            },
          },
        },
        "FunctionName": {
          "Fn::Sub": "support-reminders-create-reminder-signup-old-\${Stage}",
        },
        "Handler": "create-reminder-signup/lambda/lambda.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CreateReminderSignupLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgres",
            },
          ],
          "SubnetIds": {
            "Ref": "VpcSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "CreateReminderSignupLambdaAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmDescription": "Failed to create a reminder signup",
        "AlarmName": {
          "Fn::Sub": "support-reminders-create-reminder-signup-\${Stage} lambda error",
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "CreateReminderSignupLambda",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "CreateReminderSignupLambdaCreateOneOffPermissionProd": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "CreateReminderSignupLambda",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:\${AWS::Region}:\${AWS::AccountId}:\${__ApiId__}/\${__Stage__}/POST/create/one-off",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi",
              },
              "__Stage__": "*",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CreateReminderSignupLambdaCreateRecurringPermissionProd": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "CreateReminderSignupLambda",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:\${AWS::Region}:\${AWS::AccountId}:\${__ApiId__}/\${__Stage__}/POST/create/recurring",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi",
              },
              "__Stage__": "*",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CreateReminderSignupLambdaRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "ssm:GetParametersByPath",
                  "ssm:GetParameter",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/db-config/\${Stage}",
                  },
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/idapi/\${Stage}/*",
                  },
                ],
              },
            },
            "PolicyName": "CreateReminderSignupLambdaRolePolicy1",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": "s3:GetObject",
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:s3::*:membership-dist/*",
                ],
              },
            },
            "PolicyName": "CreateReminderSignupLambdaRolePolicy2",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DNSRecord": {
      "Properties": {
        "HostedZoneId": "Z3KO35ELNWZMSX",
        "Name": "reminders-code.support.guardianapis.com",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "DomainName",
              "RegionalDomainName",
            ],
          },
        ],
        "TTL": "60",
        "Type": "CNAME",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "DomainName": {
      "Properties": {
        "DomainName": "reminders-code.support.guardianapis.com",
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL",
          ],
        },
        "RegionalCertificateArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:acm:eu-west-1:",
              {
                "Ref": "AWS::AccountId",
              },
              ":certificate/b384a6a0-2f54-4874-b99b-96eeff96c009",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::ApiGateway::DomainName",
    },
    "NextRemindersLambda": {
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeployBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${Stack}/\${Stage}/support-reminders/support-reminders.zip",
          },
        },
        "Description": "A lambda for getting next reminders data",
        "Environment": {
          "Variables": {
            "Bucket": {
              "Ref": "DatalakeBucket",
            },
            "Stage": {
              "Ref": "Stage",
            },
          },
        },
        "FunctionName": {
          "Fn::Sub": "support-reminders-next-reminders-old-\${Stage}",
        },
        "Handler": "next-reminders/lambda/lambda.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "NextRemindersLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgres",
            },
          ],
          "SubnetIds": {
            "Ref": "VpcSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "NextRemindersLambdaAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmDescription": "Failed to create next-reminders snapshot",
        "AlarmName": {
          "Fn::Sub": "support-reminders-next-reminders-\${Stage} lambda error",
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "NextRemindersLambda",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "NextRemindersLambdaRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "ssm:GetParametersByPath",
                  "ssm:GetParameter",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/db-config/\${Stage}",
                  },
                ],
              },
            },
            "PolicyName": "NextRemindersLambdaRolePolicy1",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "s3:PutObject",
                  "s3:PutObjectAcl",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:s3:::\${DatalakeBucket}",
                  },
                  {
                    "Fn::Sub": "arn:aws:s3:::\${DatalakeBucket}/*",
                  },
                ],
              },
            },
            "PolicyName": "NextRemindersLambdaRolePolicy2",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": "s3:GetObject",
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:s3::*:membership-dist/*",
                ],
              },
            },
            "PolicyName": "NextRemindersLambdaRolePolicy3",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NextRemindersLambdaSchedule": {
      "Properties": {
        "Description": "Run next reminders lambda every day at 00:05",
        "Name": {
          "Fn::Sub": "NextRemindersSchedule-\${Stage}",
        },
        "ScheduleExpression": "cron(05 00 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "NextRemindersLambda",
                "Arn",
              ],
            },
            "Id": "NextRemindersLambdaScheduleLambdaTarget",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "NextRemindersLambdaSchedulePermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "NextRemindersLambda",
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "NextRemindersLambdaSchedule",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ReactivateRecurringReminderLambda": {
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeployBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${Stack}/\${Stage}/support-reminders/support-reminders.zip",
          },
        },
        "Description": "A lambda for reactivating cancelled recurring support reminders",
        "Environment": {
          "Variables": {
            "Stage": {
              "Ref": "Stage",
            },
          },
        },
        "FunctionName": {
          "Fn::Sub": "support-reminders-reactivate-recurring-reminder-old-\${Stage}",
        },
        "Handler": "reactivate-recurring-reminder/lambda/lambda.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "ReactivateRecurringReminderLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgres",
            },
          ],
          "SubnetIds": {
            "Ref": "VpcSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ReactivateRecurringReminderLambdaAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmDescription": "Failed to reactivate cancelled reminders",
        "AlarmName": {
          "Fn::Sub": "support-reminders-reactivate-recurring-reminder-\${Stage} lambda error",
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "ReactivateRecurringReminderLambda",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ReactivateRecurringReminderLambdaReactivatePermissionProd": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ReactivateRecurringReminderLambda",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:\${AWS::Region}:\${AWS::AccountId}:\${__ApiId__}/\${__Stage__}/POST/reactivate",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi",
              },
              "__Stage__": "*",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ReactivateRecurringReminderLambdaRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "ssm:GetParametersByPath",
                  "ssm:GetParameter",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/db-config/\${Stage}",
                  },
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/idapi/\${Stage}/*",
                  },
                ],
              },
            },
            "PolicyName": "ReactivateRecurringReminderLambdaRolePolicy1",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": "s3:GetObject",
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:s3::*:membership-dist/*",
                ],
              },
            },
            "PolicyName": "ReactivateRecurringReminderLambdaRolePolicy2",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RestApi0C43BF4B": {
      "Properties": {
        "Name": "support-CODE-support-reminders",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "RestApiAccount7C83CF5A": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "RestApi0C43BF4B",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "RestApiCloudWatchRoleE3ED6605",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "RestApiCloudWatchRoleE3ED6605": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "RestApiDeployment180EC5038c6fc6c0583ec80efc709b184b9b210e": {
      "DependsOn": [
        "RestApicancelOPTIONS8CB256F3",
        "RestApicancelPOST51F94A62",
        "RestApicancel928D6387",
        "RestApicreateoneoffOPTIONS1F89A992",
        "RestApicreateoneoffPOST41A64A32",
        "RestApicreateoneoff2D1FCD3C",
        "RestApicreateOPTIONSC3837E5E",
        "RestApicreaterecurringOPTIONSFBFDACD1",
        "RestApicreaterecurringPOSTC2005445",
        "RestApicreaterecurringA327119C",
        "RestApicreate68AA2AF0",
        "RestApiOPTIONS6AA64D2D",
        "RestApireactivateOPTIONS263B776D",
        "RestApireactivatePOSTF57FC066",
        "RestApireactivateDE09DAB5",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "RestApiDeploymentStageprod3855DE66": {
      "DependsOn": [
        "RestApiAccount7C83CF5A",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "RestApiDeployment180EC5038c6fc6c0583ec80efc709b184b9b210e",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
        "StageName": "prod",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "RestApiOPTIONS6AA64D2D": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Fn::GetAtt": [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApicancel928D6387": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "PathPart": "cancel",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApicancelOPTIONS8CB256F3": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "RestApicancel928D6387",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApicancelPOST51F94A62": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "cancelremindersF4DAF18B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "RestApicancel928D6387",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApicancelPOSTApiPermissionSupportRemindersCODERestApi2446198FPOSTcancel726EFE9A": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cancelremindersF4DAF18B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/",
              {
                "Ref": "RestApiDeploymentStageprod3855DE66",
              },
              "/POST/cancel",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApicancelPOSTApiPermissionTestSupportRemindersCODERestApi2446198FPOSTcancel7018895A": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cancelremindersF4DAF18B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/test-invoke-stage/POST/cancel",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApicreate68AA2AF0": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "PathPart": "create",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApicreateOPTIONSC3837E5E": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "RestApicreate68AA2AF0",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApicreateoneoff2D1FCD3C": {
      "Properties": {
        "ParentId": {
          "Ref": "RestApicreate68AA2AF0",
        },
        "PathPart": "one-off",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApicreateoneoffOPTIONS1F89A992": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "RestApicreateoneoff2D1FCD3C",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApicreateoneoffPOST41A64A32": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "createreminderssignupB956888C",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "RestApicreateoneoff2D1FCD3C",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApicreateoneoffPOSTApiPermissionSupportRemindersCODERestApi2446198FPOSTcreateoneoff673C3AFA": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createreminderssignupB956888C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/",
              {
                "Ref": "RestApiDeploymentStageprod3855DE66",
              },
              "/POST/create/one-off",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApicreateoneoffPOSTApiPermissionTestSupportRemindersCODERestApi2446198FPOSTcreateoneoff90DF1AAD": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createreminderssignupB956888C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/test-invoke-stage/POST/create/one-off",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApicreaterecurringA327119C": {
      "Properties": {
        "ParentId": {
          "Ref": "RestApicreate68AA2AF0",
        },
        "PathPart": "recurring",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApicreaterecurringOPTIONSFBFDACD1": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "RestApicreaterecurringA327119C",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApicreaterecurringPOSTApiPermissionSupportRemindersCODERestApi2446198FPOSTcreaterecurringA978DFB3": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createreminderssignupB956888C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/",
              {
                "Ref": "RestApiDeploymentStageprod3855DE66",
              },
              "/POST/create/recurring",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApicreaterecurringPOSTApiPermissionTestSupportRemindersCODERestApi2446198FPOSTcreaterecurringE21E016C": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createreminderssignupB956888C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/test-invoke-stage/POST/create/recurring",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApicreaterecurringPOSTC2005445": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "createreminderssignupB956888C",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "RestApicreaterecurringA327119C",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApireactivateDE09DAB5": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "PathPart": "reactivate",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApireactivateOPTIONS263B776D": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "RestApireactivateDE09DAB5",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApireactivatePOSTApiPermissionSupportRemindersCODERestApi2446198FPOSTreactivate6C81D1C9": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "reactivaterecurringreminder0045F57B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/",
              {
                "Ref": "RestApiDeploymentStageprod3855DE66",
              },
              "/POST/reactivate",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApireactivatePOSTApiPermissionTestSupportRemindersCODERestApi2446198FPOSTreactivate026D533F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "reactivaterecurringreminder0045F57B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/test-invoke-stage/POST/reactivate",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApireactivatePOSTF57FC066": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "reactivaterecurringreminder0045F57B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "RestApireactivateDE09DAB5",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "S3getObjectinlinepolicyEB49FF3F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3::*:membership-dist/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "S3getObjectinlinepolicyEB49FF3F",
        "Roles": [
          {
            "Ref": "createreminderssignupServiceRole14AD0F8F",
          },
          {
            "Ref": "reactivaterecurringreminderServiceRoleA9652C4C",
          },
          {
            "Ref": "cancelremindersServiceRole2D334903",
          },
          {
            "Ref": "signupexportsServiceRole7E76A5F3",
          },
          {
            "Ref": "nextremindersServiceRole39CF7574",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "S3putObjectinlinepolicy23ADF13F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectAcl",
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::contributions-private",
                "arn:aws:s3:::contributions-private/*",
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "S3putObjectinlinepolicy23ADF13F",
        "Roles": [
          {
            "Ref": "signupexportsServiceRole7E76A5F3",
          },
          {
            "Ref": "nextremindersServiceRole39CF7574",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SSMinlinepolicyB56CB2A2": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:GetParametersByPath",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/support-reminders/db-config/CODE",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/support-reminders/idapi/CODE/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/CODE/support/support-reminders/db-config",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/CODE/support/support-reminders/idapi/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SSMinlinepolicyB56CB2A2",
        "Roles": [
          {
            "Ref": "createreminderssignupServiceRole14AD0F8F",
          },
          {
            "Ref": "reactivaterecurringreminderServiceRoleA9652C4C",
          },
          {
            "Ref": "cancelremindersServiceRole2D334903",
          },
          {
            "Ref": "signupexportsServiceRole7E76A5F3",
          },
          {
            "Ref": "nextremindersServiceRole39CF7574",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SearchRemindersLambda": {
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeployBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${Stack}/\${Stage}/support-reminders/support-reminders.zip",
          },
        },
        "Description": "A lambda for searching for reminders",
        "Environment": {
          "Variables": {
            "Stage": {
              "Ref": "Stage",
            },
          },
        },
        "FunctionName": {
          "Fn::Sub": "support-reminders-search-reminders-old-\${Stage}",
        },
        "Handler": "search-reminders/lambda/lambda.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "SearchRemindersLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgres",
            },
          ],
          "SubnetIds": {
            "Ref": "VpcSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "SearchRemindersLambdaRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "ssm:GetParametersByPath",
                  "ssm:GetParameter",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/db-config/\${Stage}",
                  },
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/idapi/\${Stage}/*",
                  },
                ],
              },
            },
            "PolicyName": "SearchRemindersLambdaRolePolicy1",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": "s3:GetObject",
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:s3::*:membership-dist/*",
                ],
              },
            },
            "PolicyName": "SearchRemindersLambdaRolePolicy2",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SearchRemindersLambdaSearchPermissionProd": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "SearchRemindersLambda",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:\${AWS::Region}:\${AWS::AccountId}:\${__ApiId__}/\${__Stage__}/POST/search",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi",
              },
              "__Stage__": "*",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ServerlessRestApi": {
      "Properties": {
        "Body": {
          "info": {
            "title": {
              "Ref": "AWS::StackName",
            },
            "version": "1.0",
          },
          "paths": {
            "/cancel": {
              "options": {
                "consumes": [
                  "application/json",
                ],
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "200": {
                    "description": "Default response for CORS method",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string",
                      },
                    },
                  },
                },
                "summary": "CORS support",
                "x-amazon-apigateway-integration": {
                  "requestTemplates": {
                    "application/json": "{
  "statusCode" : 200
}
",
                  },
                  "responses": {
                    "default": {
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                        "method.response.header.Access-Control-Allow-Methods": "'*'",
                        "method.response.header.Access-Control-Allow-Origin": {
                          "Fn::FindInMap": [
                            "StageMap",
                            {
                              "Ref": "Stage",
                            },
                            "CorsOrigin",
                          ],
                        },
                      },
                      "responseTemplates": {
                        "application/json": "{}
",
                      },
                      "statusCode": "200",
                    },
                  },
                  "type": "mock",
                },
              },
              "post": {
                "responses": {},
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:\${AWS::Region}:lambda:path/2015-03-31/functions/\${CancelRemindersLambda.Arn}/invocations",
                  },
                },
              },
            },
            "/create/one-off": {
              "options": {
                "consumes": [
                  "application/json",
                ],
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "200": {
                    "description": "Default response for CORS method",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string",
                      },
                    },
                  },
                },
                "summary": "CORS support",
                "x-amazon-apigateway-integration": {
                  "requestTemplates": {
                    "application/json": "{
  "statusCode" : 200
}
",
                  },
                  "responses": {
                    "default": {
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                        "method.response.header.Access-Control-Allow-Methods": "'*'",
                        "method.response.header.Access-Control-Allow-Origin": {
                          "Fn::FindInMap": [
                            "StageMap",
                            {
                              "Ref": "Stage",
                            },
                            "CorsOrigin",
                          ],
                        },
                      },
                      "responseTemplates": {
                        "application/json": "{}
",
                      },
                      "statusCode": "200",
                    },
                  },
                  "type": "mock",
                },
              },
              "post": {
                "responses": {},
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:\${AWS::Region}:lambda:path/2015-03-31/functions/\${CreateReminderSignupLambda.Arn}/invocations",
                  },
                },
              },
            },
            "/create/recurring": {
              "options": {
                "consumes": [
                  "application/json",
                ],
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "200": {
                    "description": "Default response for CORS method",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string",
                      },
                    },
                  },
                },
                "summary": "CORS support",
                "x-amazon-apigateway-integration": {
                  "requestTemplates": {
                    "application/json": "{
  "statusCode" : 200
}
",
                  },
                  "responses": {
                    "default": {
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                        "method.response.header.Access-Control-Allow-Methods": "'*'",
                        "method.response.header.Access-Control-Allow-Origin": {
                          "Fn::FindInMap": [
                            "StageMap",
                            {
                              "Ref": "Stage",
                            },
                            "CorsOrigin",
                          ],
                        },
                      },
                      "responseTemplates": {
                        "application/json": "{}
",
                      },
                      "statusCode": "200",
                    },
                  },
                  "type": "mock",
                },
              },
              "post": {
                "responses": {},
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:\${AWS::Region}:lambda:path/2015-03-31/functions/\${CreateReminderSignupLambda.Arn}/invocations",
                  },
                },
              },
            },
            "/reactivate": {
              "options": {
                "consumes": [
                  "application/json",
                ],
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "200": {
                    "description": "Default response for CORS method",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string",
                      },
                    },
                  },
                },
                "summary": "CORS support",
                "x-amazon-apigateway-integration": {
                  "requestTemplates": {
                    "application/json": "{
  "statusCode" : 200
}
",
                  },
                  "responses": {
                    "default": {
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                        "method.response.header.Access-Control-Allow-Methods": "'*'",
                        "method.response.header.Access-Control-Allow-Origin": {
                          "Fn::FindInMap": [
                            "StageMap",
                            {
                              "Ref": "Stage",
                            },
                            "CorsOrigin",
                          ],
                        },
                      },
                      "responseTemplates": {
                        "application/json": "{}
",
                      },
                      "statusCode": "200",
                    },
                  },
                  "type": "mock",
                },
              },
              "post": {
                "responses": {},
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:\${AWS::Region}:lambda:path/2015-03-31/functions/\${ReactivateRecurringReminderLambda.Arn}/invocations",
                  },
                },
              },
            },
            "/search": {
              "options": {
                "consumes": [
                  "application/json",
                ],
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "200": {
                    "description": "Default response for CORS method",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string",
                      },
                    },
                  },
                },
                "summary": "CORS support",
                "x-amazon-apigateway-integration": {
                  "requestTemplates": {
                    "application/json": "{
  "statusCode" : 200
}
",
                  },
                  "responses": {
                    "default": {
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                        "method.response.header.Access-Control-Allow-Methods": "'*'",
                        "method.response.header.Access-Control-Allow-Origin": {
                          "Fn::FindInMap": [
                            "StageMap",
                            {
                              "Ref": "Stage",
                            },
                            "CorsOrigin",
                          ],
                        },
                      },
                      "responseTemplates": {
                        "application/json": "{}
",
                      },
                      "statusCode": "200",
                    },
                  },
                  "type": "mock",
                },
              },
              "post": {
                "responses": {},
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:\${AWS::Region}:lambda:path/2015-03-31/functions/\${SearchRemindersLambda.Arn}/invocations",
                  },
                },
              },
            },
          },
          "swagger": "2.0",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ServerlessRestApiDeployment35164ab9c6": {
      "Properties": {
        "Description": "RestApi deployment id: 35164ab9c69e7ad25b481304f695a6fca30e4980",
        "RestApiId": {
          "Ref": "ServerlessRestApi",
        },
        "StageName": "Stage",
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ServerlessRestApiProdStage": {
      "Properties": {
        "DeploymentId": {
          "Ref": "ServerlessRestApiDeployment35164ab9c6",
        },
        "RestApiId": {
          "Ref": "ServerlessRestApi",
        },
        "StageName": "Prod",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "SignupExportsLambda": {
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeployBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${Stack}/\${Stage}/support-reminders/support-reminders.zip",
          },
        },
        "Description": "A lambda for exporting signups data",
        "Environment": {
          "Variables": {
            "Bucket": {
              "Ref": "DatalakeBucket",
            },
            "Stage": {
              "Ref": "Stage",
            },
          },
        },
        "FunctionName": {
          "Fn::Sub": "support-reminders-signup-exports-old-\${Stage}",
        },
        "Handler": "signup-exports/lambda/lambda.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "SignupExportsLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "Timeout": 900,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgres",
            },
          ],
          "SubnetIds": {
            "Ref": "VpcSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "SignupExportsLambdaAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmDescription": "Failed to create signups exports",
        "AlarmName": {
          "Fn::Sub": "support-reminders-signup-exports-\${Stage} lambda error",
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "SignupExportsLambda",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SignupExportsLambdaRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "ssm:GetParametersByPath",
                  "ssm:GetParameter",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/db-config/\${Stage}",
                  },
                ],
              },
            },
            "PolicyName": "SignupExportsLambdaRolePolicy1",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "s3:PutObject",
                  "s3:PutObjectAcl",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:s3:::\${DatalakeBucket}",
                  },
                  {
                    "Fn::Sub": "arn:aws:s3:::\${DatalakeBucket}/*",
                  },
                ],
              },
            },
            "PolicyName": "SignupExportsLambdaRolePolicy2",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": "s3:GetObject",
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:s3::*:membership-dist/*",
                ],
              },
            },
            "PolicyName": "SignupExportsLambdaRolePolicy3",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SignupExportsLambdaSchedule": {
      "Properties": {
        "Description": "Run sigup exports lambda every day at 00:05",
        "Name": {
          "Fn::Sub": "RemindersExportSchedule-\${Stage}",
        },
        "ScheduleExpression": "cron(05 00 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "SignupExportsLambda",
                "Arn",
              ],
            },
            "Id": "SignupExportsLambdaScheduleLambdaTarget",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "SignupExportsLambdaSchedulePermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "SignupExportsLambda",
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "SignupExportsLambdaSchedule",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "cancelremindersF4DAF18B": {
      "DependsOn": [
        "cancelremindersServiceRoleDefaultPolicyC48CB67C",
        "cancelremindersServiceRole2D334903",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "support/CODE/support-reminders/support-reminders.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "support-reminders",
            "Bucket": "contributions-private",
            "STACK": "support",
            "STAGE": "CODE",
            "Stage": "CODE",
          },
        },
        "FunctionName": "support-reminders-cancel-reminders-new-CODE",
        "Handler": "cancel-reminders/lambda/lambda.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "cancelremindersServiceRole2D334903",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgresCDK",
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "cancelremindersServiceRole2D334903": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "cancelremindersServiceRoleDefaultPolicyC48CB67C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/support/CODE/support-reminders/support-reminders.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/CODE/support/support-reminders",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/CODE/support/support-reminders/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "cancelremindersServiceRoleDefaultPolicyC48CB67C",
        "Roles": [
          {
            "Ref": "cancelremindersServiceRole2D334903",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "createreminderssignupB956888C": {
      "DependsOn": [
        "createreminderssignupServiceRoleDefaultPolicyA7184F21",
        "createreminderssignupServiceRole14AD0F8F",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "support/CODE/support-reminders/support-reminders.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "support-reminders",
            "Bucket": "contributions-private",
            "STACK": "support",
            "STAGE": "CODE",
            "Stage": "CODE",
          },
        },
        "FunctionName": "support-reminders-create-reminder-signup-new-CODE",
        "Handler": "create-reminder-signup/lambda/lambda.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "createreminderssignupServiceRole14AD0F8F",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgresCDK",
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "createreminderssignupServiceRole14AD0F8F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "createreminderssignupServiceRoleDefaultPolicyA7184F21": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/support/CODE/support-reminders/support-reminders.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/CODE/support/support-reminders",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/CODE/support/support-reminders/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "createreminderssignupServiceRoleDefaultPolicyA7184F21",
        "Roles": [
          {
            "Ref": "createreminderssignupServiceRole14AD0F8F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "nextreminders1BF0BB76": {
      "DependsOn": [
        "nextremindersServiceRoleDefaultPolicy13BE068C",
        "nextremindersServiceRole39CF7574",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "support/CODE/support-reminders/support-reminders.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "support-reminders",
            "Bucket": "contributions-private",
            "STACK": "support",
            "STAGE": "CODE",
            "Stage": "CODE",
          },
        },
        "FunctionName": "support-reminders-next-reminders-new-CODE",
        "Handler": "next-reminders/lambda/lambda.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "nextremindersServiceRole39CF7574",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgresCDK",
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "nextremindersErrorPercentageAlarmForLambdaB1934EC0": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":conversion-dev",
              ],
            ],
          },
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "nextreminders1BF0BB76",
              },
              " exceeded 1% error rate",
            ],
          ],
        },
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              "High error % from ",
              {
                "Ref": "nextreminders1BF0BB76",
              },
              " lambda in CODE",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "100*m1/m2",
            "Id": "expr_1",
            "Label": {
              "Fn::Join": [
                "",
                [
                  "Error % of ",
                  {
                    "Ref": "nextreminders1BF0BB76",
                  },
                ],
              ],
            },
          },
          {
            "Id": "m1",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "nextreminders1BF0BB76",
                    },
                  },
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          {
            "Id": "m2",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "nextreminders1BF0BB76",
                    },
                  },
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "nextremindersServiceRole39CF7574": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "nextremindersServiceRoleDefaultPolicy13BE068C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/support/CODE/support-reminders/support-reminders.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/CODE/support/support-reminders",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/CODE/support/support-reminders/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "nextremindersServiceRoleDefaultPolicy13BE068C",
        "Roles": [
          {
            "Ref": "nextremindersServiceRole39CF7574",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "nextremindersnextreminderscron05000AllowEventRuleSupportRemindersCODEnextremindersCEEC74A609E30C1C": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "nextreminders1BF0BB76",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "nextremindersnextreminderscron05000EB5DF789",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "nextremindersnextreminderscron05000EB5DF789": {
      "Properties": {
        "ScheduleExpression": "cron(05 00 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "nextreminders1BF0BB76",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "reactivaterecurringreminder0045F57B": {
      "DependsOn": [
        "reactivaterecurringreminderServiceRoleDefaultPolicyA6827EC3",
        "reactivaterecurringreminderServiceRoleA9652C4C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "support/CODE/support-reminders/support-reminders.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "support-reminders",
            "Bucket": "contributions-private",
            "STACK": "support",
            "STAGE": "CODE",
            "Stage": "CODE",
          },
        },
        "FunctionName": "support-reminders-reactivate-recurring-reminder-new-CODE",
        "Handler": "reactivate-recurring-reminder/lambda/lambda.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "reactivaterecurringreminderServiceRoleA9652C4C",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgresCDK",
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "reactivaterecurringreminderServiceRoleA9652C4C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "reactivaterecurringreminderServiceRoleDefaultPolicyA6827EC3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/support/CODE/support-reminders/support-reminders.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/CODE/support/support-reminders",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/CODE/support/support-reminders/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "reactivaterecurringreminderServiceRoleDefaultPolicyA6827EC3",
        "Roles": [
          {
            "Ref": "reactivaterecurringreminderServiceRoleA9652C4C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "signupexportsDBFAB572": {
      "DependsOn": [
        "signupexportsServiceRoleDefaultPolicy7B14F7DA",
        "signupexportsServiceRole7E76A5F3",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "support/CODE/support-reminders/support-reminders.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "support-reminders",
            "Bucket": "contributions-private",
            "STACK": "support",
            "STAGE": "CODE",
            "Stage": "CODE",
          },
        },
        "FunctionName": "support-reminders-signup-exports-new-CODE",
        "Handler": "signup-exports/lambda/lambda.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "signupexportsServiceRole7E76A5F3",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgresCDK",
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "signupexportsErrorPercentageAlarmForLambda89F69AC3": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":conversion-dev",
              ],
            ],
          },
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "signupexportsDBFAB572",
              },
              " exceeded 1% error rate",
            ],
          ],
        },
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              "High error % from ",
              {
                "Ref": "signupexportsDBFAB572",
              },
              " lambda in CODE",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "100*m1/m2",
            "Id": "expr_1",
            "Label": {
              "Fn::Join": [
                "",
                [
                  "Error % of ",
                  {
                    "Ref": "signupexportsDBFAB572",
                  },
                ],
              ],
            },
          },
          {
            "Id": "m1",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "signupexportsDBFAB572",
                    },
                  },
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          {
            "Id": "m2",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "signupexportsDBFAB572",
                    },
                  },
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "signupexportsServiceRole7E76A5F3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "signupexportsServiceRoleDefaultPolicy7B14F7DA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/support/CODE/support-reminders/support-reminders.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/CODE/support/support-reminders",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/CODE/support/support-reminders/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "signupexportsServiceRoleDefaultPolicy7B14F7DA",
        "Roles": [
          {
            "Ref": "signupexportsServiceRole7E76A5F3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "signupexportssignupexportscron05000AADDEB89": {
      "Properties": {
        "ScheduleExpression": "cron(05 00 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "signupexportsDBFAB572",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "signupexportssignupexportscron05000AllowEventRuleSupportRemindersCODEsignupexportsAD9773DB716A9DE6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "signupexportsDBFAB572",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "signupexportssignupexportscron05000AADDEB89",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;

exports[`The SupportReminders stack matches the snapshot 2`] = `
{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "IsProd": {
      "Fn::Equals": [
        {
          "Ref": "Stage",
        },
        "PROD",
      ],
    },
  },
  "Description": "The lambdas for supporter reminders",
  "Mappings": {
    "StageMap": {
      "CODE": {
        "CorsOrigin": "'*'",
        "DomainName": "reminders-code.support.guardianapis.com",
      },
      "PROD": {
        "CorsOrigin": "'*'",
        "DomainName": "reminders.support.guardianapis.com",
      },
    },
  },
  "Metadata": {
    "gu:cdk:constructs": [
      "GuStringParameter",
      "GuVpcParameter",
      "GuSubnetListParameter",
      "GuDistributionBucketParameter",
      "GuLambdaFunction",
      "GuLambdaFunction",
      "GuLambdaFunction",
      "GuApiGatewayWithLambdaByPath",
      "GuApiGateway5xxPercentageAlarm",
      "GuScheduledLambda",
      "GuLambdaErrorPercentageAlarm",
      "GuScheduledLambda",
      "GuLambdaErrorPercentageAlarm",
      "GuAlarm",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": {
    "RestApiEndpoint0551178A": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "RestApi0C43BF4B",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "RestApiDeploymentStageprod3855DE66",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "CertificateArn": {
      "Description": "ARN of the certificate",
      "Type": "String",
    },
    "DatalakeBucket": {
      "Description": "Bucket to upload data for ingestion into BigQuery",
      "Type": "String",
    },
    "DeployBucket": {
      "Default": "membership-dist",
      "Description": "Bucket to copy files to",
      "Type": "String",
    },
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "PrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "SecurityGroupToAccessPostgres": {
      "Description": "Security group to access the RDS instance",
      "Type": "String",
    },
    "SecurityGroupToAccessPostgresCDK": {
      "Description": "Security group to access the RDS instance",
      "Type": "String",
    },
    "Stack": {
      "Default": "support",
      "Description": "Stack name",
      "Type": "String",
    },
    "Stage": {
      "AllowedValues": [
        "CODE",
        "PROD",
      ],
      "Description": "Set by RiffRaff on each deploy",
      "Type": "String",
    },
    "VpcId": {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
    "VpcSubnets": {
      "Description": "Subnets for RDS access",
      "Type": "List<AWS::EC2::Subnet::Id>",
    },
  },
  "Resources": {
    "ApiGateway4XXAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmDescription": "Reminders API received an invalid request",
        "AlarmName": {
          "Fn::Sub": "support-reminders-\${Stage} API gateway 4XX response",
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "ApiName",
            "Value": {
              "Fn::Sub": "support-reminders-\${Stage}",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "4XXError",
        "Namespace": "AWS/ApiGateway",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 8,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ApiGateway4XXAlarm59D14AA2": {
      "Properties": {
        "ActionsEnabled": false,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":contributions-dev",
              ],
            ],
          },
        ],
        "AlarmDescription": "Impact - Reminders API received an invalid request. Follow the process in https://docs.google.com/document/d/1_3El3cly9d7u_jPgTcRjLxmdG2e919zCLvmcFCLOYAk/edit",
        "AlarmName": "URGENT 9-5 - PROD API gateway 4XX response",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "ApiName",
            "Value": "support-reminders-PROD",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "4XXError",
        "Namespace": "AWS/ApiGateway",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 8,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ApiGateway5XXAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmDescription": "Reminders API failed to create a signup",
        "AlarmName": {
          "Fn::Sub": "support-reminders-\${Stage} API gateway 5XX response",
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "ApiName",
            "Value": {
              "Fn::Sub": "support-reminders-\${Stage}",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "5XXError",
        "Namespace": "AWS/ApiGateway",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ApiGatewayHigh5xxPercentageAlarmSupportreminders2F3286A8": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":conversion-dev",
              ],
            ],
          },
        ],
        "AlarmDescription": "support-reminders exceeded 1% error rate",
        "AlarmName": "High 5XX error % from support-reminders (ApiGateway) in PROD",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "100*m1/m2",
            "Id": "expr_1",
            "Label": "% of 5XX responses served for support-reminders",
          },
          {
            "Id": "m1",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "ApiName",
                    "Value": "support-PROD-support-reminders",
                  },
                ],
                "MetricName": "5XXError",
                "Namespace": "AWS/ApiGateway",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          {
            "Id": "m2",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "ApiName",
                    "Value": "support-PROD-support-reminders",
                  },
                ],
                "MetricName": "Count",
                "Namespace": "AWS/ApiGateway",
              },
              "Period": 60,
              "Stat": "SampleCount",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "BasePathMapping": {
      "Properties": {
        "DomainName": {
          "Ref": "DomainName",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
        "Stage": {
          "Ref": "RestApiDeploymentStageprod3855DE66",
        },
      },
      "Type": "AWS::ApiGateway::BasePathMapping",
    },
    "CancelRemindersLambda": {
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeployBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${Stack}/\${Stage}/support-reminders/support-reminders.zip",
          },
        },
        "Description": "A lambda for cancelling pending support reminders",
        "Environment": {
          "Variables": {
            "Stage": {
              "Ref": "Stage",
            },
          },
        },
        "FunctionName": {
          "Fn::Sub": "support-reminders-cancel-reminders-old-\${Stage}",
        },
        "Handler": "cancel-reminders/lambda/lambda.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CancelRemindersLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgres",
            },
          ],
          "SubnetIds": {
            "Ref": "VpcSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "CancelRemindersLambdaAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmDescription": "Failed to cancel pending reminders",
        "AlarmName": {
          "Fn::Sub": "support-reminders-cancel-reminders-\${Stage} lambda error",
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "CancelRemindersLambda",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "CancelRemindersLambdaCreateOneOffPermissionProd": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "CancelRemindersLambda",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:\${AWS::Region}:\${AWS::AccountId}:\${__ApiId__}/\${__Stage__}/POST/cancel",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi",
              },
              "__Stage__": "*",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CancelRemindersLambdaRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "ssm:GetParametersByPath",
                  "ssm:GetParameter",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/db-config/\${Stage}",
                  },
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/idapi/\${Stage}/*",
                  },
                ],
              },
            },
            "PolicyName": "CancelRemindersLambdaRolePolicy1",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": "s3:GetObject",
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:s3::*:membership-dist/*",
                ],
              },
            },
            "PolicyName": "CancelRemindersLambdaRolePolicy2",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CreateReminderSignupLambda": {
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeployBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${Stack}/\${Stage}/support-reminders/support-reminders.zip",
          },
        },
        "Description": "A lambda for creating support reminders",
        "Environment": {
          "Variables": {
            "Stage": {
              "Ref": "Stage",
            },
          },
        },
        "FunctionName": {
          "Fn::Sub": "support-reminders-create-reminder-signup-old-\${Stage}",
        },
        "Handler": "create-reminder-signup/lambda/lambda.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CreateReminderSignupLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgres",
            },
          ],
          "SubnetIds": {
            "Ref": "VpcSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "CreateReminderSignupLambdaAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmDescription": "Failed to create a reminder signup",
        "AlarmName": {
          "Fn::Sub": "support-reminders-create-reminder-signup-\${Stage} lambda error",
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "CreateReminderSignupLambda",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "CreateReminderSignupLambdaCreateOneOffPermissionProd": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "CreateReminderSignupLambda",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:\${AWS::Region}:\${AWS::AccountId}:\${__ApiId__}/\${__Stage__}/POST/create/one-off",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi",
              },
              "__Stage__": "*",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CreateReminderSignupLambdaCreateRecurringPermissionProd": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "CreateReminderSignupLambda",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:\${AWS::Region}:\${AWS::AccountId}:\${__ApiId__}/\${__Stage__}/POST/create/recurring",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi",
              },
              "__Stage__": "*",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CreateReminderSignupLambdaRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "ssm:GetParametersByPath",
                  "ssm:GetParameter",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/db-config/\${Stage}",
                  },
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/idapi/\${Stage}/*",
                  },
                ],
              },
            },
            "PolicyName": "CreateReminderSignupLambdaRolePolicy1",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": "s3:GetObject",
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:s3::*:membership-dist/*",
                ],
              },
            },
            "PolicyName": "CreateReminderSignupLambdaRolePolicy2",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DNSRecord": {
      "Properties": {
        "HostedZoneId": "Z3KO35ELNWZMSX",
        "Name": "reminders.support.guardianapis.com",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "DomainName",
              "RegionalDomainName",
            ],
          },
        ],
        "TTL": "60",
        "Type": "CNAME",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "DomainName": {
      "Properties": {
        "DomainName": "reminders.support.guardianapis.com",
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL",
          ],
        },
        "RegionalCertificateArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:acm:eu-west-1:",
              {
                "Ref": "AWS::AccountId",
              },
              ":certificate/b384a6a0-2f54-4874-b99b-96eeff96c009",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::ApiGateway::DomainName",
    },
    "NextRemindersLambda": {
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeployBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${Stack}/\${Stage}/support-reminders/support-reminders.zip",
          },
        },
        "Description": "A lambda for getting next reminders data",
        "Environment": {
          "Variables": {
            "Bucket": {
              "Ref": "DatalakeBucket",
            },
            "Stage": {
              "Ref": "Stage",
            },
          },
        },
        "FunctionName": {
          "Fn::Sub": "support-reminders-next-reminders-old-\${Stage}",
        },
        "Handler": "next-reminders/lambda/lambda.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "NextRemindersLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgres",
            },
          ],
          "SubnetIds": {
            "Ref": "VpcSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "NextRemindersLambdaAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmDescription": "Failed to create next-reminders snapshot",
        "AlarmName": {
          "Fn::Sub": "support-reminders-next-reminders-\${Stage} lambda error",
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "NextRemindersLambda",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "NextRemindersLambdaRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "ssm:GetParametersByPath",
                  "ssm:GetParameter",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/db-config/\${Stage}",
                  },
                ],
              },
            },
            "PolicyName": "NextRemindersLambdaRolePolicy1",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "s3:PutObject",
                  "s3:PutObjectAcl",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:s3:::\${DatalakeBucket}",
                  },
                  {
                    "Fn::Sub": "arn:aws:s3:::\${DatalakeBucket}/*",
                  },
                ],
              },
            },
            "PolicyName": "NextRemindersLambdaRolePolicy2",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": "s3:GetObject",
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:s3::*:membership-dist/*",
                ],
              },
            },
            "PolicyName": "NextRemindersLambdaRolePolicy3",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NextRemindersLambdaSchedule": {
      "Properties": {
        "Description": "Run next reminders lambda every day at 00:05",
        "Name": {
          "Fn::Sub": "NextRemindersSchedule-\${Stage}",
        },
        "ScheduleExpression": "cron(05 00 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "NextRemindersLambda",
                "Arn",
              ],
            },
            "Id": "NextRemindersLambdaScheduleLambdaTarget",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "NextRemindersLambdaSchedulePermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "NextRemindersLambda",
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "NextRemindersLambdaSchedule",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ReactivateRecurringReminderLambda": {
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeployBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${Stack}/\${Stage}/support-reminders/support-reminders.zip",
          },
        },
        "Description": "A lambda for reactivating cancelled recurring support reminders",
        "Environment": {
          "Variables": {
            "Stage": {
              "Ref": "Stage",
            },
          },
        },
        "FunctionName": {
          "Fn::Sub": "support-reminders-reactivate-recurring-reminder-old-\${Stage}",
        },
        "Handler": "reactivate-recurring-reminder/lambda/lambda.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "ReactivateRecurringReminderLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgres",
            },
          ],
          "SubnetIds": {
            "Ref": "VpcSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ReactivateRecurringReminderLambdaAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmDescription": "Failed to reactivate cancelled reminders",
        "AlarmName": {
          "Fn::Sub": "support-reminders-reactivate-recurring-reminder-\${Stage} lambda error",
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "ReactivateRecurringReminderLambda",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ReactivateRecurringReminderLambdaReactivatePermissionProd": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ReactivateRecurringReminderLambda",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:\${AWS::Region}:\${AWS::AccountId}:\${__ApiId__}/\${__Stage__}/POST/reactivate",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi",
              },
              "__Stage__": "*",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ReactivateRecurringReminderLambdaRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "ssm:GetParametersByPath",
                  "ssm:GetParameter",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/db-config/\${Stage}",
                  },
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/idapi/\${Stage}/*",
                  },
                ],
              },
            },
            "PolicyName": "ReactivateRecurringReminderLambdaRolePolicy1",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": "s3:GetObject",
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:s3::*:membership-dist/*",
                ],
              },
            },
            "PolicyName": "ReactivateRecurringReminderLambdaRolePolicy2",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RestApi0C43BF4B": {
      "Properties": {
        "Name": "support-PROD-support-reminders",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "RestApiAccount7C83CF5A": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "RestApi0C43BF4B",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "RestApiCloudWatchRoleE3ED6605",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "RestApiCloudWatchRoleE3ED6605": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "RestApiDeployment180EC503976da10c8b1a7239582bdc41c8dcd15b": {
      "DependsOn": [
        "RestApicancelOPTIONS8CB256F3",
        "RestApicancelPOST51F94A62",
        "RestApicancel928D6387",
        "RestApicreateoneoffOPTIONS1F89A992",
        "RestApicreateoneoffPOST41A64A32",
        "RestApicreateoneoff2D1FCD3C",
        "RestApicreateOPTIONSC3837E5E",
        "RestApicreaterecurringOPTIONSFBFDACD1",
        "RestApicreaterecurringPOSTC2005445",
        "RestApicreaterecurringA327119C",
        "RestApicreate68AA2AF0",
        "RestApiOPTIONS6AA64D2D",
        "RestApireactivateOPTIONS263B776D",
        "RestApireactivatePOSTF57FC066",
        "RestApireactivateDE09DAB5",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "RestApiDeploymentStageprod3855DE66": {
      "DependsOn": [
        "RestApiAccount7C83CF5A",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "RestApiDeployment180EC503976da10c8b1a7239582bdc41c8dcd15b",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
        "StageName": "prod",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "RestApiOPTIONS6AA64D2D": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Fn::GetAtt": [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApicancel928D6387": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "PathPart": "cancel",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApicancelOPTIONS8CB256F3": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "RestApicancel928D6387",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApicancelPOST51F94A62": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "cancelremindersF4DAF18B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "RestApicancel928D6387",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApicancelPOSTApiPermissionSupportRemindersPRODRestApi318F04F5POSTcancelDEED3D9C": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cancelremindersF4DAF18B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/",
              {
                "Ref": "RestApiDeploymentStageprod3855DE66",
              },
              "/POST/cancel",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApicancelPOSTApiPermissionTestSupportRemindersPRODRestApi318F04F5POSTcancel9F0D4BD7": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cancelremindersF4DAF18B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/test-invoke-stage/POST/cancel",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApicreate68AA2AF0": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "PathPart": "create",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApicreateOPTIONSC3837E5E": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "RestApicreate68AA2AF0",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApicreateoneoff2D1FCD3C": {
      "Properties": {
        "ParentId": {
          "Ref": "RestApicreate68AA2AF0",
        },
        "PathPart": "one-off",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApicreateoneoffOPTIONS1F89A992": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "RestApicreateoneoff2D1FCD3C",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApicreateoneoffPOST41A64A32": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "createreminderssignupB956888C",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "RestApicreateoneoff2D1FCD3C",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApicreateoneoffPOSTApiPermissionSupportRemindersPRODRestApi318F04F5POSTcreateoneoffCB9C5A56": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createreminderssignupB956888C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/",
              {
                "Ref": "RestApiDeploymentStageprod3855DE66",
              },
              "/POST/create/one-off",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApicreateoneoffPOSTApiPermissionTestSupportRemindersPRODRestApi318F04F5POSTcreateoneoff02BE2CEA": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createreminderssignupB956888C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/test-invoke-stage/POST/create/one-off",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApicreaterecurringA327119C": {
      "Properties": {
        "ParentId": {
          "Ref": "RestApicreate68AA2AF0",
        },
        "PathPart": "recurring",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApicreaterecurringOPTIONSFBFDACD1": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "RestApicreaterecurringA327119C",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApicreaterecurringPOSTApiPermissionSupportRemindersPRODRestApi318F04F5POSTcreaterecurringF86752F5": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createreminderssignupB956888C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/",
              {
                "Ref": "RestApiDeploymentStageprod3855DE66",
              },
              "/POST/create/recurring",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApicreaterecurringPOSTApiPermissionTestSupportRemindersPRODRestApi318F04F5POSTcreaterecurring6220A329": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createreminderssignupB956888C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/test-invoke-stage/POST/create/recurring",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApicreaterecurringPOSTC2005445": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "createreminderssignupB956888C",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "RestApicreaterecurringA327119C",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApireactivateDE09DAB5": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "PathPart": "reactivate",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApireactivateOPTIONS263B776D": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "RestApireactivateDE09DAB5",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApireactivatePOSTApiPermissionSupportRemindersPRODRestApi318F04F5POSTreactivate1A555DC2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "reactivaterecurringreminder0045F57B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/",
              {
                "Ref": "RestApiDeploymentStageprod3855DE66",
              },
              "/POST/reactivate",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApireactivatePOSTApiPermissionTestSupportRemindersPRODRestApi318F04F5POSTreactivateEE85DD31": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "reactivaterecurringreminder0045F57B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/test-invoke-stage/POST/reactivate",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApireactivatePOSTF57FC066": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "reactivaterecurringreminder0045F57B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "RestApireactivateDE09DAB5",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "S3getObjectinlinepolicyEB49FF3F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3::*:membership-dist/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "S3getObjectinlinepolicyEB49FF3F",
        "Roles": [
          {
            "Ref": "createreminderssignupServiceRole14AD0F8F",
          },
          {
            "Ref": "reactivaterecurringreminderServiceRoleA9652C4C",
          },
          {
            "Ref": "cancelremindersServiceRole2D334903",
          },
          {
            "Ref": "signupexportsServiceRole7E76A5F3",
          },
          {
            "Ref": "nextremindersServiceRole39CF7574",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "S3putObjectinlinepolicy23ADF13F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectAcl",
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::ophan-raw-support-reminders",
                "arn:aws:s3:::ophan-raw-support-reminders/*",
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "S3putObjectinlinepolicy23ADF13F",
        "Roles": [
          {
            "Ref": "signupexportsServiceRole7E76A5F3",
          },
          {
            "Ref": "nextremindersServiceRole39CF7574",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SSMinlinepolicyB56CB2A2": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:GetParametersByPath",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/support-reminders/db-config/PROD",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/support-reminders/idapi/PROD/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/PROD/support/support-reminders/db-config",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/PROD/support/support-reminders/idapi/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SSMinlinepolicyB56CB2A2",
        "Roles": [
          {
            "Ref": "createreminderssignupServiceRole14AD0F8F",
          },
          {
            "Ref": "reactivaterecurringreminderServiceRoleA9652C4C",
          },
          {
            "Ref": "cancelremindersServiceRole2D334903",
          },
          {
            "Ref": "signupexportsServiceRole7E76A5F3",
          },
          {
            "Ref": "nextremindersServiceRole39CF7574",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SearchRemindersLambda": {
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeployBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${Stack}/\${Stage}/support-reminders/support-reminders.zip",
          },
        },
        "Description": "A lambda for searching for reminders",
        "Environment": {
          "Variables": {
            "Stage": {
              "Ref": "Stage",
            },
          },
        },
        "FunctionName": {
          "Fn::Sub": "support-reminders-search-reminders-old-\${Stage}",
        },
        "Handler": "search-reminders/lambda/lambda.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "SearchRemindersLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgres",
            },
          ],
          "SubnetIds": {
            "Ref": "VpcSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "SearchRemindersLambdaRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "ssm:GetParametersByPath",
                  "ssm:GetParameter",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/db-config/\${Stage}",
                  },
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/idapi/\${Stage}/*",
                  },
                ],
              },
            },
            "PolicyName": "SearchRemindersLambdaRolePolicy1",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": "s3:GetObject",
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:s3::*:membership-dist/*",
                ],
              },
            },
            "PolicyName": "SearchRemindersLambdaRolePolicy2",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SearchRemindersLambdaSearchPermissionProd": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "SearchRemindersLambda",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:\${AWS::Region}:\${AWS::AccountId}:\${__ApiId__}/\${__Stage__}/POST/search",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi",
              },
              "__Stage__": "*",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ServerlessRestApi": {
      "Properties": {
        "Body": {
          "info": {
            "title": {
              "Ref": "AWS::StackName",
            },
            "version": "1.0",
          },
          "paths": {
            "/cancel": {
              "options": {
                "consumes": [
                  "application/json",
                ],
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "200": {
                    "description": "Default response for CORS method",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string",
                      },
                    },
                  },
                },
                "summary": "CORS support",
                "x-amazon-apigateway-integration": {
                  "requestTemplates": {
                    "application/json": "{
  "statusCode" : 200
}
",
                  },
                  "responses": {
                    "default": {
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                        "method.response.header.Access-Control-Allow-Methods": "'*'",
                        "method.response.header.Access-Control-Allow-Origin": {
                          "Fn::FindInMap": [
                            "StageMap",
                            {
                              "Ref": "Stage",
                            },
                            "CorsOrigin",
                          ],
                        },
                      },
                      "responseTemplates": {
                        "application/json": "{}
",
                      },
                      "statusCode": "200",
                    },
                  },
                  "type": "mock",
                },
              },
              "post": {
                "responses": {},
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:\${AWS::Region}:lambda:path/2015-03-31/functions/\${CancelRemindersLambda.Arn}/invocations",
                  },
                },
              },
            },
            "/create/one-off": {
              "options": {
                "consumes": [
                  "application/json",
                ],
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "200": {
                    "description": "Default response for CORS method",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string",
                      },
                    },
                  },
                },
                "summary": "CORS support",
                "x-amazon-apigateway-integration": {
                  "requestTemplates": {
                    "application/json": "{
  "statusCode" : 200
}
",
                  },
                  "responses": {
                    "default": {
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                        "method.response.header.Access-Control-Allow-Methods": "'*'",
                        "method.response.header.Access-Control-Allow-Origin": {
                          "Fn::FindInMap": [
                            "StageMap",
                            {
                              "Ref": "Stage",
                            },
                            "CorsOrigin",
                          ],
                        },
                      },
                      "responseTemplates": {
                        "application/json": "{}
",
                      },
                      "statusCode": "200",
                    },
                  },
                  "type": "mock",
                },
              },
              "post": {
                "responses": {},
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:\${AWS::Region}:lambda:path/2015-03-31/functions/\${CreateReminderSignupLambda.Arn}/invocations",
                  },
                },
              },
            },
            "/create/recurring": {
              "options": {
                "consumes": [
                  "application/json",
                ],
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "200": {
                    "description": "Default response for CORS method",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string",
                      },
                    },
                  },
                },
                "summary": "CORS support",
                "x-amazon-apigateway-integration": {
                  "requestTemplates": {
                    "application/json": "{
  "statusCode" : 200
}
",
                  },
                  "responses": {
                    "default": {
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                        "method.response.header.Access-Control-Allow-Methods": "'*'",
                        "method.response.header.Access-Control-Allow-Origin": {
                          "Fn::FindInMap": [
                            "StageMap",
                            {
                              "Ref": "Stage",
                            },
                            "CorsOrigin",
                          ],
                        },
                      },
                      "responseTemplates": {
                        "application/json": "{}
",
                      },
                      "statusCode": "200",
                    },
                  },
                  "type": "mock",
                },
              },
              "post": {
                "responses": {},
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:\${AWS::Region}:lambda:path/2015-03-31/functions/\${CreateReminderSignupLambda.Arn}/invocations",
                  },
                },
              },
            },
            "/reactivate": {
              "options": {
                "consumes": [
                  "application/json",
                ],
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "200": {
                    "description": "Default response for CORS method",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string",
                      },
                    },
                  },
                },
                "summary": "CORS support",
                "x-amazon-apigateway-integration": {
                  "requestTemplates": {
                    "application/json": "{
  "statusCode" : 200
}
",
                  },
                  "responses": {
                    "default": {
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                        "method.response.header.Access-Control-Allow-Methods": "'*'",
                        "method.response.header.Access-Control-Allow-Origin": {
                          "Fn::FindInMap": [
                            "StageMap",
                            {
                              "Ref": "Stage",
                            },
                            "CorsOrigin",
                          ],
                        },
                      },
                      "responseTemplates": {
                        "application/json": "{}
",
                      },
                      "statusCode": "200",
                    },
                  },
                  "type": "mock",
                },
              },
              "post": {
                "responses": {},
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:\${AWS::Region}:lambda:path/2015-03-31/functions/\${ReactivateRecurringReminderLambda.Arn}/invocations",
                  },
                },
              },
            },
            "/search": {
              "options": {
                "consumes": [
                  "application/json",
                ],
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "200": {
                    "description": "Default response for CORS method",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string",
                      },
                    },
                  },
                },
                "summary": "CORS support",
                "x-amazon-apigateway-integration": {
                  "requestTemplates": {
                    "application/json": "{
  "statusCode" : 200
}
",
                  },
                  "responses": {
                    "default": {
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                        "method.response.header.Access-Control-Allow-Methods": "'*'",
                        "method.response.header.Access-Control-Allow-Origin": {
                          "Fn::FindInMap": [
                            "StageMap",
                            {
                              "Ref": "Stage",
                            },
                            "CorsOrigin",
                          ],
                        },
                      },
                      "responseTemplates": {
                        "application/json": "{}
",
                      },
                      "statusCode": "200",
                    },
                  },
                  "type": "mock",
                },
              },
              "post": {
                "responses": {},
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:\${AWS::Region}:lambda:path/2015-03-31/functions/\${SearchRemindersLambda.Arn}/invocations",
                  },
                },
              },
            },
          },
          "swagger": "2.0",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ServerlessRestApiDeployment35164ab9c6": {
      "Properties": {
        "Description": "RestApi deployment id: 35164ab9c69e7ad25b481304f695a6fca30e4980",
        "RestApiId": {
          "Ref": "ServerlessRestApi",
        },
        "StageName": "Stage",
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ServerlessRestApiProdStage": {
      "Properties": {
        "DeploymentId": {
          "Ref": "ServerlessRestApiDeployment35164ab9c6",
        },
        "RestApiId": {
          "Ref": "ServerlessRestApi",
        },
        "StageName": "Prod",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "SignupExportsLambda": {
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeployBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${Stack}/\${Stage}/support-reminders/support-reminders.zip",
          },
        },
        "Description": "A lambda for exporting signups data",
        "Environment": {
          "Variables": {
            "Bucket": {
              "Ref": "DatalakeBucket",
            },
            "Stage": {
              "Ref": "Stage",
            },
          },
        },
        "FunctionName": {
          "Fn::Sub": "support-reminders-signup-exports-old-\${Stage}",
        },
        "Handler": "signup-exports/lambda/lambda.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "SignupExportsLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "Timeout": 900,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgres",
            },
          ],
          "SubnetIds": {
            "Ref": "VpcSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "SignupExportsLambdaAlarm": {
      "Condition": "IsProd",
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmDescription": "Failed to create signups exports",
        "AlarmName": {
          "Fn::Sub": "support-reminders-signup-exports-\${Stage} lambda error",
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "SignupExportsLambda",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SignupExportsLambdaRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "ssm:GetParametersByPath",
                  "ssm:GetParameter",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/support-reminders/db-config/\${Stage}",
                  },
                ],
              },
            },
            "PolicyName": "SignupExportsLambdaRolePolicy1",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": [
                  "s3:PutObject",
                  "s3:PutObjectAcl",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:s3:::\${DatalakeBucket}",
                  },
                  {
                    "Fn::Sub": "arn:aws:s3:::\${DatalakeBucket}/*",
                  },
                ],
              },
            },
            "PolicyName": "SignupExportsLambdaRolePolicy2",
          },
          {
            "PolicyDocument": {
              "Statement": {
                "Action": "s3:GetObject",
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:s3::*:membership-dist/*",
                ],
              },
            },
            "PolicyName": "SignupExportsLambdaRolePolicy3",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "lambda:createdBy",
            "Value": "SAM",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SignupExportsLambdaSchedule": {
      "Properties": {
        "Description": "Run sigup exports lambda every day at 00:05",
        "Name": {
          "Fn::Sub": "RemindersExportSchedule-\${Stage}",
        },
        "ScheduleExpression": "cron(05 00 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "SignupExportsLambda",
                "Arn",
              ],
            },
            "Id": "SignupExportsLambdaScheduleLambdaTarget",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "SignupExportsLambdaSchedulePermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "SignupExportsLambda",
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "SignupExportsLambdaSchedule",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "cancelremindersF4DAF18B": {
      "DependsOn": [
        "cancelremindersServiceRoleDefaultPolicyC48CB67C",
        "cancelremindersServiceRole2D334903",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "support/PROD/support-reminders/support-reminders.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "support-reminders",
            "Bucket": "ophan-raw-support-reminders",
            "STACK": "support",
            "STAGE": "PROD",
            "Stage": "PROD",
          },
        },
        "FunctionName": "support-reminders-cancel-reminders-new-PROD",
        "Handler": "cancel-reminders/lambda/lambda.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "cancelremindersServiceRole2D334903",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgresCDK",
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "cancelremindersServiceRole2D334903": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "cancelremindersServiceRoleDefaultPolicyC48CB67C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/support/PROD/support-reminders/support-reminders.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/support/support-reminders",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/support/support-reminders/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "cancelremindersServiceRoleDefaultPolicyC48CB67C",
        "Roles": [
          {
            "Ref": "cancelremindersServiceRole2D334903",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "createreminderssignupB956888C": {
      "DependsOn": [
        "createreminderssignupServiceRoleDefaultPolicyA7184F21",
        "createreminderssignupServiceRole14AD0F8F",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "support/PROD/support-reminders/support-reminders.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "support-reminders",
            "Bucket": "ophan-raw-support-reminders",
            "STACK": "support",
            "STAGE": "PROD",
            "Stage": "PROD",
          },
        },
        "FunctionName": "support-reminders-create-reminder-signup-new-PROD",
        "Handler": "create-reminder-signup/lambda/lambda.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "createreminderssignupServiceRole14AD0F8F",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgresCDK",
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "createreminderssignupServiceRole14AD0F8F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "createreminderssignupServiceRoleDefaultPolicyA7184F21": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/support/PROD/support-reminders/support-reminders.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/support/support-reminders",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/support/support-reminders/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "createreminderssignupServiceRoleDefaultPolicyA7184F21",
        "Roles": [
          {
            "Ref": "createreminderssignupServiceRole14AD0F8F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "nextreminders1BF0BB76": {
      "DependsOn": [
        "nextremindersServiceRoleDefaultPolicy13BE068C",
        "nextremindersServiceRole39CF7574",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "support/PROD/support-reminders/support-reminders.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "support-reminders",
            "Bucket": "ophan-raw-support-reminders",
            "STACK": "support",
            "STAGE": "PROD",
            "Stage": "PROD",
          },
        },
        "FunctionName": "support-reminders-next-reminders-new-PROD",
        "Handler": "next-reminders/lambda/lambda.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "nextremindersServiceRole39CF7574",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgresCDK",
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "nextremindersErrorPercentageAlarmForLambdaB1934EC0": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":conversion-dev",
              ],
            ],
          },
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "nextreminders1BF0BB76",
              },
              " exceeded 1% error rate",
            ],
          ],
        },
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              "High error % from ",
              {
                "Ref": "nextreminders1BF0BB76",
              },
              " lambda in PROD",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "100*m1/m2",
            "Id": "expr_1",
            "Label": {
              "Fn::Join": [
                "",
                [
                  "Error % of ",
                  {
                    "Ref": "nextreminders1BF0BB76",
                  },
                ],
              ],
            },
          },
          {
            "Id": "m1",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "nextreminders1BF0BB76",
                    },
                  },
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          {
            "Id": "m2",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "nextreminders1BF0BB76",
                    },
                  },
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "nextremindersServiceRole39CF7574": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "nextremindersServiceRoleDefaultPolicy13BE068C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/support/PROD/support-reminders/support-reminders.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/support/support-reminders",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/support/support-reminders/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "nextremindersServiceRoleDefaultPolicy13BE068C",
        "Roles": [
          {
            "Ref": "nextremindersServiceRole39CF7574",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "nextremindersnextreminderscron05000AllowEventRuleSupportRemindersPRODnextreminders3B36D5FC8C6A0FB9": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "nextreminders1BF0BB76",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "nextremindersnextreminderscron05000EB5DF789",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "nextremindersnextreminderscron05000EB5DF789": {
      "Properties": {
        "ScheduleExpression": "cron(05 00 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "nextreminders1BF0BB76",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "reactivaterecurringreminder0045F57B": {
      "DependsOn": [
        "reactivaterecurringreminderServiceRoleDefaultPolicyA6827EC3",
        "reactivaterecurringreminderServiceRoleA9652C4C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "support/PROD/support-reminders/support-reminders.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "support-reminders",
            "Bucket": "ophan-raw-support-reminders",
            "STACK": "support",
            "STAGE": "PROD",
            "Stage": "PROD",
          },
        },
        "FunctionName": "support-reminders-reactivate-recurring-reminder-new-PROD",
        "Handler": "reactivate-recurring-reminder/lambda/lambda.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "reactivaterecurringreminderServiceRoleA9652C4C",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgresCDK",
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "reactivaterecurringreminderServiceRoleA9652C4C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "reactivaterecurringreminderServiceRoleDefaultPolicyA6827EC3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/support/PROD/support-reminders/support-reminders.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/support/support-reminders",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/support/support-reminders/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "reactivaterecurringreminderServiceRoleDefaultPolicyA6827EC3",
        "Roles": [
          {
            "Ref": "reactivaterecurringreminderServiceRoleA9652C4C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "signupexportsDBFAB572": {
      "DependsOn": [
        "signupexportsServiceRoleDefaultPolicy7B14F7DA",
        "signupexportsServiceRole7E76A5F3",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "support/PROD/support-reminders/support-reminders.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "support-reminders",
            "Bucket": "ophan-raw-support-reminders",
            "STACK": "support",
            "STAGE": "PROD",
            "Stage": "PROD",
          },
        },
        "FunctionName": "support-reminders-signup-exports-new-PROD",
        "Handler": "signup-exports/lambda/lambda.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "signupexportsServiceRole7E76A5F3",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroupToAccessPostgresCDK",
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "signupexportsErrorPercentageAlarmForLambda89F69AC3": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":conversion-dev",
              ],
            ],
          },
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "signupexportsDBFAB572",
              },
              " exceeded 1% error rate",
            ],
          ],
        },
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              "High error % from ",
              {
                "Ref": "signupexportsDBFAB572",
              },
              " lambda in PROD",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "100*m1/m2",
            "Id": "expr_1",
            "Label": {
              "Fn::Join": [
                "",
                [
                  "Error % of ",
                  {
                    "Ref": "signupexportsDBFAB572",
                  },
                ],
              ],
            },
          },
          {
            "Id": "m1",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "signupexportsDBFAB572",
                    },
                  },
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          {
            "Id": "m2",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "signupexportsDBFAB572",
                    },
                  },
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "signupexportsServiceRole7E76A5F3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "support-reminders",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/support-reminders",
          },
          {
            "Key": "Stack",
            "Value": "support",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "signupexportsServiceRoleDefaultPolicy7B14F7DA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/support/PROD/support-reminders/support-reminders.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/support/support-reminders",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/support/support-reminders/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "signupexportsServiceRoleDefaultPolicy7B14F7DA",
        "Roles": [
          {
            "Ref": "signupexportsServiceRole7E76A5F3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "signupexportssignupexportscron05000AADDEB89": {
      "Properties": {
        "ScheduleExpression": "cron(05 00 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "signupexportsDBFAB572",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "signupexportssignupexportscron05000AllowEventRuleSupportRemindersPRODsignupexports9697219BFDCAF922": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "signupexportsDBFAB572",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "signupexportssignupexportscron05000AADDEB89",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;
